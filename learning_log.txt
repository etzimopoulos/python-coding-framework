# Udemy Course: A Python project with coding framework and unit testing
File used to keep track of my learning, including links I've used as I go along.

*** Day 1 - 28/06/22 ***
- Created new local and repote repository in Git
- Tested I can update local from remote and also push to remote by adding a README and doing minor updates

*** Day 2 - 29/06/22 *** 
- Installed Python3.9 in Ubuntu, upgrading from current 3.7.6
- Used the following article as reference - https://www.itsupportwale.com/blog/how-to-upgrade-to-python-3-9-0-on-ubuntu-18-04-lts/
- This creates 2 versions for Python interpreter
- To learn more about how to use "update-alternatives" to select any of them by default or manually I read through this article: https://linuxhint.com/update_alternatives_ubuntu/
- Next day: 
1. To complete switching to 3.9 and configure update-alternatives properly
2. To go through PyCharm installation in Linux (have it already in Windows but want to work of the Linux-VMBox)

*** Day 3 - 04/07/2022 *** 
- Configured update-alternatives to use Python3 by default instead of Python 2. Article reference:
https://linuxhint.com/update_alternatives_ubuntu/
- Using "python --version" or "python3 -V" command still gives me 3.7.6 so something is not working right
- Update-alteratives is setup as per article both for "python" or "python3":

e.g. results when querying for python or python3

(base) etzimopoulos@dell-ubuntu-vm:~/Google-Drive/Career/Data Science/GitHub/python-coding-framework$ update-alternatives --query python
Name: python
Link: /usr/local/bin/python
Status: auto
Best: /usr/bin/python3.9
Value: /usr/bin/python3.9

Alternative: /home/etzimopoulos/anaconda3/bin/python3
Priority: 40

Alternative: /usr/bin/python2
Priority: 20

Alternative: /usr/bin/python3.9
Priority: 60

(base) etzimopoulos@dell-ubuntu-vm:~/Google-Drive/Career/Data Science/GitHub/python-coding-framework$ update-alternatives --query python3
Name: python3
Link: /usr/local/bin/python3
Status: auto
Best: /usr/bin/python3.9
Value: /usr/bin/python3.9

Alternative: /usr/bin/python3.9
Priority: 80

----- Final solution -----
In the end, a simple alias worked:
Step 1 - Added the following to .bashrc 
    alias python="python3.9"

Step 2 - Restarted .bashrc
source ~/.bashrc

Worked. Now "python --version" gives me 3.9.13, while "python3 --version" gives me the default python 3.7.6

Also:
1. Removed all the update alternatives for "python" or "python3"
2. Re-installed PyCharm in VM box and now is working.
3. Created the First project and checked into Git

Sorted!

*** Day 4 - 06/07/2022 *** 
Python Learning - going quickly through this chapter to make sure I don't miss anything
 
- Dictionaries - when retrieving values that don't exist there are two ways to do that:
1) my_dict['key_value_doesnt_exist'] - referencing that key will throw an error as there's no such key as 'key_value_doesnt_exist'
2) alternatively can use get() function: my_dict.get('key_value_doesnt_exist') which will return "None" if value doesn't exist and program is not going to terminate with error. 

Note "None" is considered as False in Python (for boolean statements)



*** Day 5  - 18/07/2022 ***
Section 3: Organising code, logging and error handling
10. Initializing variables with a constructor - completed this and run without issues
Started documenting sequence diagram of interactions in slide deck (not completed)


*** Day 6 - 19/07/2022 ***
Finished documentation on 3.9 and 3.10


*** Day 7 - 25/07/2022 ***
Covered the whole of Logging sections 11, 12 & 13
Updated documentation for 11, 12 and 13
Completed Section 3 (including adding error handling try/except blocks)

*** Day 8 - 27/07/2022 ***
Section 15 - Completed by adding fileprocessor.ini with relevant table config (not real DB tables yet)
Section 16 - PostgreSQL already added in my system, checked using SQL Shell (psql) command line. 
I was also able to find the table 'futurexschema' created from last time I did the course with futurex_course_catalog table within it : select * from futurexschema.futurex_course_catalog;
Now I'll have to create one new like 'futurex2schema' or something keep the same schema and add a futurex_course_catalog_2 table that so I can repeat it properly

Created new table within the existing scheme with a 2 index in the end:

CREATE TABLE futurexschema.futurex_course_catalog2
(
course_id integer NOT NULL,
course_name character varying COLLATE pg_catalog."default" NOT NULL,
author_name character varying COLLATE pg_catalog."default" NOT NULL,
course_section json NOT NULL,
creation_date date NOT NULL,
CONSTRAINT futurex_course_catalog2_pkey PRIMARY KEY (course_id)
);


Inserting rows
INSERT INTO futurexschema.futurex_course_catalog2(
course_id, course_name, author_name, course_section, creation_date)
VALUES(2, 'Hadoop Spark', 'FutureXskill', '{"section": 1, "title":"Hadoop"}', '2020-01-13');


INSERT INTO futurexschema.futurex_course_catalog2(
course_id, course_name, author_name, course_section, creation_date)
VALUES(1, 'Spring Boot MicroServices', 'FutureXskill', '{"section": 1, "title":"MicroServices"}', '2020-02-20');


Section 17
Import library in python to interact with PostgreSQL: psycopg2
If working with this library for the FIRST TIME, you need to include that in the Python environment

*********** RUN into ERROR when installing phycopg2 library *********** 

ERROR log:

ERROR: Command errored out with exit status 1:
     command: /home/etzimopoulos/anaconda3/bin/python -c 'import sys, setuptools, tokenize; sys.argv[0] = '"'"'/tmp/pip-install-wo8jwdq4/psycopg2/setup.py'"'"'; __file__='"'"'/tmp/pip-install-wo8jwdq4/psycopg2/setup.py'"'"';f=getattr(tokenize, '"'"'open'"'"', open)(__file__);code=f.read().replace('"'"'\r\n'"'"', '"'"'\n'"'"');f.close();exec(compile(code, __file__, '"'"'exec'"'"'))' egg_info --egg-base /tmp/pip-pip-egg-info-l8r4ie4q
         cwd: /tmp/pip-install-wo8jwdq4/psycopg2/
    Complete output (23 lines):
    running egg_info
    creating /tmp/pip-pip-egg-info-l8r4ie4q/psycopg2.egg-info
    writing /tmp/pip-pip-egg-info-l8r4ie4q/psycopg2.egg-info/PKG-INFO
    writing dependency_links to /tmp/pip-pip-egg-info-l8r4ie4q/psycopg2.egg-info/dependency_links.txt
    writing top-level names to /tmp/pip-pip-egg-info-l8r4ie4q/psycopg2.egg-info/top_level.txt
    writing manifest file '/tmp/pip-pip-egg-info-l8r4ie4q/psycopg2.egg-info/SOURCES.txt'
    
    Error: pg_config executable not found.
    
    pg_config is required to build psycopg2 from source.  Please add the directory
    containing pg_config to the $PATH or specify the full executable path with the
    option:
    
        python setup.py build_ext --pg-config /path/to/pg_config build ...
    
    or with the pg_config option in 'setup.cfg'.
    
    If you prefer to avoid building psycopg2 from source, please install the PyPI
    'psycopg2-binary' package instead.
    
    For further information please check the 'doc/src/install.rst' file (also at
    <https://www.psycopg.org/docs/install.html>).


******************  Problem SOLVED *********************************************
- Looked up following thread on StackOverflow:
https://stackoverflow.com/questions/11618898/pg-config-executable-not-found


"pg_config" was missing, but this can be installed usingt the following command:

sudo apt-get install libpq-dev

Then it works fine.
